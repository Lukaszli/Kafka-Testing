buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://packages.confluent.io/maven/" }
        maven { url "https://plugins.gradle.org/m2/"}
    }
    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.9.1"
        classpath(group: 'gradle.plugin.com.github.imflog', name: 'kafka-schema-registry-gradle-plugin', version: '0.5.0')
        classpath "io.freefair.gradle:lombok-plugin:5.1.0"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.1.RELEASE"
    }
}

apply plugin: "java"
apply plugin: "com.commercehub.gradle.plugin.avro"
apply plugin: "com.github.imflog.kafka-schema-registry-gradle-plugin"
apply plugin: "io.freefair.lombok"
apply plugin: "org.springframework.boot"

group 'prv.saevel.kafka.academy'

version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://packages.confluent.io/maven/" }
}

dependencies {
    testCompile group: 'io.projectreactor.kafka', name: 'reactor-kafka', version: '1.2.2.RELEASE'
    testCompile group: 'io.projectreactor', name: 'reactor-test', version: '3.3.2.RELEASE'

    testCompile group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'
    compile "org.apache.avro:avro:1.8.1"

    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'

    testCompile group: 'io.cucumber', name: 'cucumber-spring', version: '6.2.2'
    testCompile group: 'io.cucumber', name: 'cucumber-java', version: '6.2.2'
    testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '6.2.2'
    testCompile group: 'io.cucumber', name: 'cucumber-core', version: '6.2.2'
}

schemaRegistry {
    url = 'http://localhost:8081/'
    download {
        subject('users-value', 'automated-testing/build/resources/avro')
        subject('transactions-value', 'automated-testing/build/resources/avro')
        subject('alerts-value', 'automated-testing/build/resources/avro')
    }
}

avro {
    stringType = "CharSequence"
}

tasks.register("generateAvro", com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("build/resources/avro")
    outputDir = file("build/generated-sources")
}

tasks.named("compileJava").configure {
    source(generateAvro)
}

sourceSets.main.java.srcDirs += file("build/generated-sources")